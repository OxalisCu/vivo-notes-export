let step = 0
const maxSteps = 5
const executeInterval = 200

function downloadNotes() {
  let k = 0
  for (let j = 0; j < 10; j++) {
    setTimeout(() => {
      console.log("[1]", step, k, j)
    }, k * executeInterval)
    k++
  }

  setTimeout(() => {
    console.log("[2]", step, k)
  }, k * executeInterval)
  k++

  setTimeout(() => {
    if (step < maxSteps) {
      console.log("[3]", step, k)
      step++
      downloadNotes()
      console.log("[4]")
    } else {
      console.log("downloaded")
    }
  }, k * executeInterval)
  k++
}

downloadNotes()

// outputs:
// [1] 0 12 0
// [1] 0 12 1
// [1] 0 12 2
// [1] 0 12 3
// [1] 0 12 4
// [1] 0 12 5
// [1] 0 12 6
// [1] 0 12 7
// [1] 0 12 8
// [1] 0 12 9
// [2] 0 12
// [3] 0 12
// [4]
// [1] 1 12 0
// [1] 1 12 1
// [1] 1 12 2
// [1] 1 12 3
// [1] 1 12 4
// [1] 1 12 5
// [1] 1 12 6
// [1] 1 12 7
// [1] 1 12 8
// [1] 1 12 9
// [2] 1 12
// [3] 1 12
// [4]
// [1] 2 12 0
// [1] 2 12 1
// [1] 2 12 2
// [1] 2 12 3
// [1] 2 12 4
// [1] 2 12 5
// [1] 2 12 6
// [1] 2 12 7
// [1] 2 12 8
// [1] 2 12 9
// [2] 2 12
// [3] 2 12
// [4]
// [1] 3 12 0
// [1] 3 12 1
// [1] 3 12 2
// [1] 3 12 3
// [1] 3 12 4
// [1] 3 12 5
// [1] 3 12 6
// [1] 3 12 7
// [1] 3 12 8
// [1] 3 12 9
// [2] 3 12
// [3] 3 12
// [4]
// [1] 4 12 0
// [1] 4 12 1
// [1] 4 12 2
// [1] 4 12 3
// [1] 4 12 4
// [1] 4 12 5
// [1] 4 12 6
// [1] 4 12 7
// [1] 4 12 8
// [1] 4 12 9
// [2] 4 12
// [3] 4 12
// [4]
// [1] 5 12 0
// [1] 5 12 1
// [1] 5 12 2
// [1] 5 12 3
// [1] 5 12 4
// [1] 5 12 5
// [1] 5 12 6
// [1] 5 12 7
// [1] 5 12 8
// [1] 5 12 9
// [2] 5 12
// downloaded